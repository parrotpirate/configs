vim: set filetype=tridactyl
" sanitise tridactyllocal tridactylsync
bind ZZ composite sanitise tridactyllocal tridactylsync; qall
"---

"CONFIG SETTINGS
"---

colourscheme dracula-custom
" colourscheme quake


guiset_quiet hoverlink left " Sometimes the status bar in the bottom left corner overlaps the Tridactyl command line, so set an option to move the status bar to the right.

set allowautofocus false
set hintdelay 100
set hintfiltermode vimperator-reflow
set hintnames numeric
set hintshift true
set homepages ["about:blank"]
set newtab about:blank
set smoothscroll true
" set editorcmd /usr/local/bin/goneovim %f -w

set modeindicatorshowkeys true
set visualexitauto false
"set tabopencontaineraware true

" But also support Tridactyl search too.
bind ,/ fillcmdline find
bind n findnext 1
bind N findnext -1
" Remove search highlighting.
bind <Esc> nohlsearch

" Stupid workaround to let hint -; be used with composite which steals semi-colons
command hint_focus hint -;
command workcontainer tabopen -c Work
command personalcontainer tabopen -c Personal
command src source

bind ,,; fillcmdline_notrail
bind c hint -Jc input[type="checkbox"]
bind mc hint -qJc input[type="checkbox"]
bind C hint -J;c input[type="checkbox"]
bind ,t fillcmdline taball
bind ,,t fillcmdline tab
" bind ct hint -tJ
" bind cf hint -J
" bind cF hint -bJ
" bind ,b hint -b
"bind ,f hint -j
bind mf hint -qb
" Handy multiwindow/multitasking binds
bind gd tabdetach
bind gD fillcmdline tabgrab
command ta tabgrab
bind gxt composite tabnext | sleep 1 | tabclose
bind gxT composite tabprev | sleep 1 | tabclose
bind ,j hint -J
bind ,f hint -;
bind ,h hint -h
bind <c-e> hint -f Edit
" bind E tabprev
" bind R tabnext
bind d scrollpage 0.5
bind e scrollpage -0.5
bind D scrollpage 1
bind E scrollpage -1

" bind i hint -Jc input[type="text"], textarea, input[type="search"]
" bind I composite hint -Jc input[type="text"], textarea, input[type="search"] | editor
bind i hint -Jc input:not([type="checkbox"]),textarea
" bind I composite hint -Jc input,textarea | editor
bind yi composite hint -J-pipe input,textarea value | yank
" bind ,p hint -Jc input, textarea, input[type="search"] -F e => {e.value = tri.excmds.getclip()}
" bind ,p composite hint -Jc input, textarea, input[type="search"] | getclip | fillcmdline
bind ya hint -y
bind ma hint -qW yank
bind mA hint -qy
bind yt hint -p
bind yp hint -F e => {navigator.clipboard.readText().then(text=>{e.value=text})}
bind mt hint -qp
bind b fillcmdline bmarks
bind B fillcmdline bmarks -t
bind O fillcmdline tabopen
bind t hint -t
bind ,S hint -c input[type="submit"]
bind --mode=hint <Space> hint.pushSpace
bind --mode=normal V mode visual
bind --mode=visual V mode normal
bind --mode=visual y composite js document.getSelection().toString() | yank; js document.getSelection().empty(); mode normal; hidecmdline
bind --mode=normal <C-v> mode ignore
bind --mode=insert <C-v> mode ignore
bind --mode=ignore <C-v> mode normal
bind --mode=visual <C-c> <Esc>
bind --mode=hint <C-c> <Esc>
bind --mode=insert <C-c> escapehatch
bind --mode=insert <C-]> escapehatch

bind x tabclose
bind X undo tab
bind zz winclose

bind --mode=ex          <C-a>   text.beginning_of_line
bind --mode=insert      <C-a>   text.beginning_of_line
bind --mode=input       <C-a>   text.beginning_of_line
bind --mode=ex          <C-e>   text.end_of_line
bind --mode=insert      <C-e>   text.end_of_line
bind --mode=input       <C-e>   text.end_of_line
bind --mode=ex          <C-f>   text.forward_word
bind --mode=insert      <C-f>   text.forward_word
bind --mode=input       <C-f>   text.forward_word
bind --mode=ex          <C-k>   text.kill_line
bind --mode=insert      <C-k>   text.kill_line
bind --mode=input       <C-k>   text.kill_line
bind --mode=ex          <C-u>   text.backward_kill_line
bind --mode=insert      <C-u>   text.backward_kill_line
bind --mode=input       <C-u>   text.backward_kill_line
" Requires custom firefox build: https://github.com/glacambre/firefox-patches
" bind --mode=ex          <C-w>   text.backward_kill_word
" bind --mode=insert      <C-w>   text.backward_kill_word
" bind --mode=input       <C-w>   text.backward_kill_word

" JIRA SPECIFIC CONFIG
" unbindurl q4launch.atlassian.net\/.* --mode=normal i
" unbindurl q4launch.atlassian.net\/.* --mode=normal /
" unbindurl q4launch.atlassian.net\/.* --mode=normal .
seturl q4launch.atlassian.net\/.* allowautofocus true
unbindurl q4launch.atlassian.net\/.* --mode=normal ,j
unbindurl q4launch.atlassian.net\/.* --mode=normal m
bindurl q4launch.atlassian.net\/.* --mode=normal ,j hint -c [class*="cspqsP"]
unbindurl q4launch.atlassian.net\/.* --mode=normal ,a
bindurl q4launch.atlassian.net\/.* --mode=normal ,a hint -c [data-testid="media-card-view"]
bindurl q4launch.atlassian.net\/.* --mode=normal yr js navigator.clipboard.writeText(document.querySelectorAll("[data-test-id='issue.views.issue-base.foundation.breadcrumbs.breadcrumb-current-issue-container'] li span")[0].textContent);

" WHM SPECIFIC CONFIG
unbindurl host.q4-host.com:2087\/.* --mode=normal /

" GITHUB SPECIFIC CONFIG
bindurl github.com\/PropertyBrands\/.* --mode=normal yr js navigator.clipboard.writeText(document.querySelectorAll("#repository-container-header strong[itemprop='name'] a")[0].textContent);

" TRELLO CONFIG
seturl trello.com\/b\/.* allowautofocus true

" command scrollDown js function n(){function r(n){if(n==null){return null}if(n.scrollHeight>n.clientHeight){return n}else{return r(n.parentNode)}}var n=document.activeElement;var u=r(n);u.scrollTop+=100}n();
command scrollUp js function n(){function r(n){if(n==null){return null}if(n.scrollHeight>n.clientHeight){return n}else{return r(n.parentNode)}}var n=document.activeElement;var u=r(n);u.scrollTop=0}n();
" command scrollUp js function n(){function r(n){if(n==null){return null}if(n.scrollHeight>n.clientHeight){return n}else{return r(n.parentNode)}}var n=document.activeElement;var u=r(n);u.scrollTop-=100}n();
command scrollDown js function n(){function r(n){if(n==null){return null}if(n.scrollHeight>n.clientHeight){return n}else{return r(n.parentNode)}}var n=document.activeElement;var u=r(n);u.scrollTop=u.scrollTopMax}n();
" command getScrollableCustom js var ElementsWithScrolls=function(){function a(a,b){return e(a)[b]}function b(b){return b.offsetHeight<b.scrollHeight&&c(a(b,"overflow-y"))}function c(a){return"scroll"==a||"auto"==a}function d(a){return b(a)}var e=document.body&&document.body.currentStyle?function(a){return a.currentStyle}:function(a){return document.defaultView.getComputedStyle(a,null)};return function(){for(var b=[].filter.call(document.querySelectorAll("*"),d),c=0;c<b.length;c++)b[c].classList.add("sdp-custom-scrollable")}}();ElementsWithScrolls();
command getScrollableCustom js -r markScrollable.js
command hintScrollableCustom hint -Jc; [class*="sdp-custom-scrollable"]

bind <C-d> scrollDown
bind <C-e> scrollUp
bind ,s composite getScrollableCustom; hintScrollableCustom

" EXPERIMENTAL
set hintautoselect true
set tabclosepinned false
guiset_quiet tabs always
guiset_quiet navbar always

" unbind --mode=normal m
" unbind m

" Don't run tridactyl on these sites
autocmd DocStart mail.google.com mode ignore
